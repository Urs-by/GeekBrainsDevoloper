# Вычислить число pi c заданной точностью d. Число d находится в интервале [1e-1, 1e-10]
# Пример:
# - при d = 0.001, pi = 3.141.
# Примечание:
# Использовать только итерационные алгоритмы вычисления числа pi. Любой на ваш выбор.
# Написать функцию, которая принимает аргумент: точность вычисления числа pi
# Возвращает:
# Вычисленное число pi
# Количество выполненных итераций
# Погрешность вычисления
# Пример вызова функции: - vallis(1e-4) -> (3.141392685883853, 3928, -0.00019996770594010727)

#для рассчета используем ряд Нилаканта π = 3 + 4/(2*3*4) - 4/(4*5*6) + 4/(6*7*8) = 3 + 4/(n *(n+1)*(n+2)*i)
# где изначально 3=res, +-=i, n=2

def result(vallis):
    # temp_pi необходима для выхода из цикла
    temp_pi = round(standard, vallis)
    count = 0  # количество иттераций
    i = 1  # для чередования + и -
    n = 2  # шаг для цикла
    res = 3  # стартовое значение для рассчета пи
    while round(res, vallis) != temp_pi:
        res += 4 / (n * (n + 1) * (n + 2) * i)
        i *= -1
        n += 2
        count += 1
    return res, count, standard - res


standard = 3.1415926535897932384626433832795
vallis = int(input("Введите точность вычисления числа пи, число цифр после запятой: "))

print("Эталонное значение π:")
print(standard)
print(f"Значение π с точностью {vallis} знаков после запятой")
print(round(standard, vallis))
print("Рассчитанное значение π, количество иттераций, погрешность")
print(result(vallis))